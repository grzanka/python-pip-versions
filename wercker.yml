# build python 2.7 by default
box: python:2.7

build:
  steps:

    # copy script to a location that gets passed along to next pipelines
    - script:
        name: copy binary
        code: cp *sh "$WERCKER_OUTPUT_DIR"

test:
  box: ubuntu:16.04
  steps:

    # copy script to a location that gets passed along to next pipelines
    - script:
        name: run_all
        code: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates
          sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
          sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual
          echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" > /etc/apt/sources.list.d/docker.list
          sudo apt-get update
          sudo apt-get purge lxc-docker
          ./run.sh


# ---------------------------------- debian 8 jessie -----------------------------------------------

debian-8-jessie-py2:
  box: debian:jessie

  steps:
    - script:
        name: prerequisites
        code: |
          ./discover.sh py2


debian-8-jessie-py3:
  box: debian:jessie

  steps:
    - script:
        name: prerequisites
        code: |
          ./discover.sh py3


# ---------------------------------- debian testing -----------------------------------------------

debian-testing-py2:
  box: debian:testing

  steps:
    - script:
        name: prerequisites
        code: |
          ./discover.sh py2


debian-testing-py3:
  box: debian:testing

  steps:
    - script:
        name: prerequisites
        code: |
          ./discover.sh py3


# ---------------------------------- Ubuntu 16.04 -----------------------------------------------

test_ubuntu_1604_py2:
  box: ubuntu:16.04

  steps:

    - script:
        name: prerequisites
        code: |
          sudo apt-get update
          sudo apt-get install -qq -y --no-install-recommends python-pip python-pkg-resources  wget
          python -V
          pip -V


test_ubuntu_1604_py3:
  box: ubuntu:16.04

  steps:
    - script:
        name: prerequisites
        code: |
          sudo apt-get update
          sudo apt-get install -qq -y --no-install-recommends python3-pip python3-pkg-resources wget
          python3 -V
          pip3 -V


# ---------------------------------- Ubuntu 14.04 -----------------------------------------------

test_ubuntu_1404_py2:
  box: ubuntu:14.04

  steps:

    - script:
        name: prerequisites
        code: |
          sudo apt-get update
          sudo apt-get install -qq -y --no-install-recommends python-pip python-pkg-resources wget
          python -V
          pip -V


test_ubuntu_1404_py3:
  box: ubuntu:14.04

  steps:
    - script:
        name: prerequisites
        code: |
          sudo apt-get update
          sudo apt-get install -qq -y --no-install-recommends python3-pip wget
          python3 -V
          pip3 -V

# ---------------------------------- Centos 7 -----------------------------------------------

test_centos_7_py2:
  box: centos:7

  steps:

    - script:
        name: prerequisites
        code: |
          sudo yum update -y -q
          sudo yum install -q -y python wget
          python -V
          wget https://bootstrap.pypa.io/get-pip.py
          python get-pip.py
          pip -V


test_centos_7_py3:
  box: centos:7

  steps:
    - script:
        name: prerequisites
        code: |
          sudo yum update -y -q
          sudo yum install -q -y python3 wget
          python -V
          wget https://bootstrap.pypa.io/get-pip.py
          python get-pip.py
          pip -V


# ---------------------------------- Centos 7 -----------------------------------------------

test_fedora_24_py2:
  box: fedora:24

  steps:

    - script:
        name: prerequisites
        code: |
          sudo dnf update -y -q
          sudo dnf install -q -y python-pip wget
          python -V
          pip -V


test_fedora_24_py3:
  box: fedora:24

  steps:
    - script:
        name: prerequisites
        code: |
          sudo dnf update -y -q
          sudo dnf install -q -y python3-pip wget
          python3 -V
          pip3 -V
